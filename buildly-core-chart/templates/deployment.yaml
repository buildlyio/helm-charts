apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.buildly.name }}
  labels:
    app: {{ .Values.buildly.name }}
spec:
  replicas: {{ .Values.buildly.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: {{ .Values.buildly.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.buildly.name }}
    spec:
      containers:
      - name: {{ .Values.buildly.name }}
        envFrom:
        - configMapRef:
            name: {{ .Values.configmap.name }}
        env:
        {{- include "buildly.secrets" . | nindent 6 }}
        image: "{{ .Values.buildly.image.repository }}:{{ .Values.buildly.image.version }}"
        imagePullPolicy: {{ .Values.buildly.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.network.service.port }}
        resources:
        {{- toYaml .Values.resources | nindent 10 }}
        readinessProbe:
            httpGet:
              path: /health_check/
              port: {{ .Values.network.service.port }}
              scheme: HTTP
            initialDelaySeconds: 45
            timeoutSeconds: 3
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
      {{- if .Values.gcp.enable }}
      {{- include "buildly.gcp" . | nindent 4 }}
      {{- end }}
      restartPolicy: Always
